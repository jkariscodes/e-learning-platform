version: '3.9'

services:
  database:
    image: postgres:15-alpine
    container_name: db4${COMPOSE_PROJECT_NAME}
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "$POSTGRES_USER" ]
      interval: 40s
      timeout: 10s
      retries: 10
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    container_name: redis4${COMPOSE_PROJECT_NAME}
    ports:
      - "6379:6379"

#  memcached:
#    image: memcached
#    container_name: memcached4${COMPOSE_PROJECT_NAME}
#    ports:
#      - "11211:11211"

  django:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: django4${COMPOSE_PROJECT_NAME}
    command: python /home/app/eapp/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./:/home/app/eapp
      - static_volume:/home/app/eapp/staticfiles
      - media_volume:/home/app/eapp/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${DB_NAME}
    #      - DJANGO_SETTINGS_MODULE=ed_system.settings.local
    depends_on:
      database:
        condition: service_healthy
#      memcached:
#        condition: service_started
      redis:
        condition: service_started
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
